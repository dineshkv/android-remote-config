buildscript {
  ext.versions = [
          kotlin: '1.3.50',
          okhttp: '3.12.3',
          ktor:'1.2.5',
          serialization: '0.13.0'
  ]

  repositories {
    google()
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    classpath "org.jetbrains.kotlin:kotlin-serialization:$versions.kotlin"
    classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.1.0"
  }
}

apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-kapt'

kotlin {
  targets {
    fromPreset(presets.jvm, 'jvm')

    final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos") ? presets.iosArm64 : presets.iosX64

    fromPreset(iOSTarget, 'ios') {
      binaries {
        framework('SharedCode')
      }
    }
  }

  sourceSets {
    commonMain.dependencies {
      implementation 'org.jetbrains.kotlin:kotlin-stdlib'
      implementation "io.ktor:ktor-client-core:$versions.ktor"
      implementation "io.ktor:ktor-client-json:$versions.ktor"
      implementation "io.ktor:ktor-client-serialization:$versions.ktor"
    }

    commonTest.dependencies {
      implementation "org.jetbrains.kotlin:kotlin-test-common"
      implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
      implementation "org.amshove.kluent:kluent:1.48"
      implementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
      implementation "org.mockito:mockito-inline:2.28.2"
      implementation "io.ktor:ktor-client-mock:$versions.ktor"
    }

    jvmMain.dependencies {
      implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
      implementation "io.ktor:ktor-client-core-jvm:$versions.ktor"
      implementation ("io.ktor:ktor-client-okhttp:$versions.ktor") {
        exclude group: 'com.squareup.okhttp3'
      }
      implementation ('com.squareup.okhttp3:okhttp:3.12.3') {
        because 'Later versions of OkHttp require Java 8 to be enabled in the project.'
      }
      implementation "io.ktor:ktor-client-json-jvm:$versions.ktor"
      implementation "io.ktor:ktor-client-serialization-jvm:$versions.ktor"
    }

    iosMain.dependencies {
      implementation "io.ktor:ktor-client-ios:$versions.ktor"
      implementation "io.ktor:ktor-client-core-native:$versions.ktor"
      implementation "io.ktor:ktor-client-json-native:$versions.ktor"
      implementation "io.ktor:ktor-client-serialization-native:$versions.ktor"
    }
  }
}

if (!project.plugins.hasPlugin('io.gitlab.arturbosch.detekt')) {
  repositories {
    maven { url "https://plugins.gradle.org/m2/" }
  }
  apply plugin: 'io.gitlab.arturbosch.detekt'

  apply from: "config/quality/detekt/android.gradle"

  dependencies {
    // Enable the KtLint rules
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.1.0"
  }
}
